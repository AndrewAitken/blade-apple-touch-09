import React from "react";
import { useForm } from "react-hook-form";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Textarea } from "@/components/ui/textarea";
import { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from "@/components/ui/form";
import { Check, MessageCircle, MessagesSquare, Send } from "lucide-react";
import { z } from "zod";
import { zodResolver } from "@hookform/resolvers/zod";
import { useToast } from "@/hooks/use-toast";

// Phone input masking function
const formatPhoneNumber = (value: string) => {
  if (!value) return "";

  // Remove all non-digit characters
  const phoneNumber = value.replace(/\D/g, "");

  // Format according to the mask
  if (phoneNumber.length === 0) {
    return "";
  } else if (phoneNumber.length <= 1) {
    return `+7`;
  } else if (phoneNumber.length <= 4) {
    return `+7 (${phoneNumber.slice(1, 4)}`;
  } else if (phoneNumber.length <= 7) {
    return `+7 (${phoneNumber.slice(1, 4)}) ${phoneNumber.slice(4, 7)}`;
  } else if (phoneNumber.length <= 9) {
    return `+7 (${phoneNumber.slice(1, 4)}) ${phoneNumber.slice(4, 7)}-${phoneNumber.slice(7, 9)}`;
  } else {
    return `+7 (${phoneNumber.slice(1, 4)}) ${phoneNumber.slice(4, 7)}-${phoneNumber.slice(7, 9)}-${phoneNumber.slice(9, 11)}`;
  }
};
const formSchema = z.object({
  name: z.string().min(2, "–ò–º—è –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –Ω–µ –º–µ–Ω–µ–µ 2 —Å–∏–º–≤–æ–ª–æ–≤"),
  phone: z.string().min(10, "–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞"),
  email: z.string().email("–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email").optional().or(z.literal("")),
  message: z.string().min(10, "–°–æ–æ–±—â–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –Ω–µ –º–µ–Ω–µ–µ 10 —Å–∏–º–≤–æ–ª–æ–≤"),
  agreement: z.boolean().refine(val => val === true, {
    message: "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–æ–≥–ª–∞—Å–∏—Ç—å—Å—è —Å —É—Å–ª–æ–≤–∏—è–º–∏"
  })
});
const ContactForm = () => {
  const {
    toast
  } = useToast();
  const form = useForm({
    resolver: zodResolver(formSchema),
    defaultValues: {
      name: "",
      phone: "",
      email: "",
      message: "",
      agreement: false
    }
  });
  const onSubmit = async (data: any) => {
    try {
      // Process the phone number before submission (remove formatting)
      const cleanedPhone = data.phone.replace(/\D/g, "");
      const phoneForSubmission = cleanedPhone.length > 0 ? `+${cleanedPhone}` : "";
      const submissionData = {
        ...data,
        phone: phoneForSubmission
      };
      console.log("–û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º—ã:", submissionData);

      // –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ Telegram
      await fetch("https://api.telegram.org/bot7252849088:AAHCQfLWz-YyxY227f15HhJGzqvjydDe_cY/sendMessage", {
        method: "POST",
        headers: {
          "Content-Type": "application/json"
        },
        body: JSON.stringify({
          chat_id: "393097451",
          text: `üßº –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ CleanHub:\n–ò–º—è: ${data.name}\n–¢–µ–ª–µ—Ñ–æ–Ω: ${phoneForSubmission}\nEmail: ${data.email || "–ù–µ —É–∫–∞–∑–∞–Ω"}\n–°–æ–æ–±—â–µ–Ω–∏–µ: ${data.message}`
        })
      });
      toast({
        title: "–ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!",
        description: "–ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è",
        variant: "default"
      });
      form.reset();
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞—è–≤–∫–∏:", error);
      toast({
        title: "–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏",
        description: "–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
        variant: "destructive"
      });
    }
  };

  // Handle phone input with masking
  const handlePhoneChange = (e: React.ChangeEvent<HTMLInputElement>, onChange: (value: string) => void) => {
    const formattedValue = formatPhoneNumber(e.target.value);
    onChange(formattedValue);
  };
  return <section id="contact" className="section bg-brand-beige/20">
      <div className="container mx-auto">
        <div className="text-center mb-12">
          <h2 className="text-3xl md:text-4xl font-bold mb-4">–°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏</h2>
          <p className="text-lg text-brand-gray/80 max-w-2xl mx-auto">
            –û—Å—Ç–∞–≤—å—Ç–µ –∑–∞—è–≤–∫—É, –∏ –º—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –¥–ª—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –∏ —Ä–∞—Å—á–µ—Ç–∞ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ —É–±–æ—Ä–∫–∏
          </p>
        </div>
        
        <div className="grid grid-cols-1 md:grid-cols-2 gap-8 max-w-5xl mx-auto">
          {/* –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
          <div className="bg-white p-8 shadow-sm rounded-2xl">
            <h3 className="text-xl font-bold mb-4">–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h3>
            
            <div className="space-y-6">
              <div>
                <h4 className="font-semibold mb-2">–¢–µ–ª–µ—Ñ–æ–Ω:</h4>
                <p className="text-lg font-normal">8 920 950 08 08</p>
              </div>
              
              <div>
                <h4 className="font-semibold mb-2">Email:</h4>
                <a 
                  href="mailto:washup.info@mail.ru?subject=–ó–∞—è–≤–∫–∞ –Ω–∞ –∫–ª–∏–Ω–∏–Ω–≥"
                  className="text-lg text-brand-green hover:text-brand-green/80 hover:underline cursor-pointer transition-colors"
                >
                  washup.info@mail.ru
                </a>
              </div>
              
              <div>
                <h4 className="font-semibold mb-2">–ê–¥—Ä–µ—Å:</h4>
                <p className="text-lg">–≥. –†—è–∑–∞–Ω—å, –°–æ–±–æ—Ä–Ω–∞—è —É–ª., 15–ê  </p>
              </div>
              
              <div>
                <h4 className="font-semibold mb-2">–†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã:</h4>
                <p className="text-lg">–ü–Ω-–í—Å: —Å 8:00 –¥–æ 22:00</p>
              </div>
            </div>
            
            <div className="mt-8">
              <h4 className="font-semibold mb-4">–ú—ã –≤ –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä–∞—Ö:</h4>
              <div className="flex gap-4">
                <a href="https://wa.me/79209500808" target="_blank" rel="noopener noreferrer" className="flex items-center gap-2 px-4 py-2 bg-[#25D366]/10 rounded-lg text-sm hover:bg-[#25D366] hover:text-white transition-colors hover:scale-105">
                  <MessagesSquare size={20} /> WhatsApp
                </a>
                <a href="https://t.me/+79209500808" target="_blank" rel="noopener noreferrer" className="flex items-center gap-2 px-4 py-2 bg-[#0088cc]/10 rounded-lg text-sm hover:bg-[#0088cc] hover:text-white transition-colors hover:scale-105">
                  <Send size={20} /> Telegram
                </a>
              </div>
            </div>
          </div>
          
          {/* –§–æ—Ä–º–∞ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏ */}
          <div className="bg-white p-8 shadow-sm rounded-2xl">
            <h3 className="text-xl font-bold mb-6">–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É</h3>
            
            <Form {...form}>
              <form onSubmit={form.handleSubmit(onSubmit)} className="space-y-4">
                <FormField control={form.control} name="name" render={({
                field
              }) => <FormItem>
                      <FormLabel>–ò–º—è</FormLabel>
                      <FormControl>
                        <Input placeholder="–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤" {...field} />
                      </FormControl>
                      <FormMessage />
                    </FormItem>} />
                
                <FormField control={form.control} name="phone" render={({
                field
              }) => <FormItem>
                      <FormLabel>–¢–µ–ª–µ—Ñ–æ–Ω*</FormLabel>
                      <FormControl>
                        <Input placeholder="+7 (999) 123-45-67" value={field.value} onChange={e => handlePhoneChange(e, field.onChange)} onBlur={field.onBlur} />
                      </FormControl>
                      <FormMessage />
                    </FormItem>} />
                
                <FormField control={form.control} name="email" render={({
                field
              }) => <FormItem>
                      <FormLabel>Email</FormLabel>
                      <FormControl>
                        <Input placeholder="example@mail.ru" {...field} />
                      </FormControl>
                      <FormMessage />
                    </FormItem>} />
                
                <FormField control={form.control} name="message" render={({
                field
              }) => <FormItem>
                      <FormLabel>–°–æ–æ–±—â–µ–Ω–∏–µ</FormLabel>
                      <FormControl>
                        <Textarea placeholder="–û–ø–∏—à–∏—Ç–µ –≤–∞—à –∑–∞–ø—Ä–æ—Å –∏–ª–∏ –≤–æ–ø—Ä–æ—Å..." className="min-h-[120px]" {...field} />
                      </FormControl>
                      <FormMessage />
                    </FormItem>} />
                
                <FormField control={form.control} name="agreement" render={({
                field
              }) => <FormItem className="flex flex-row items-start space-x-3 space-y-0 py-4">
                      <FormControl>
                        <input type="checkbox" className="w-5 h-5 mt-1 text-brand-green border-gray-300 rounded focus:ring-brand-green" checked={field.value} onChange={field.onChange} />
                      </FormControl>
                      <div className="space-y-1 leading-none">
                        <FormLabel>
                          –Ø —Å–æ–≥–ª–∞—à–∞—é—Å—å —Å —É—Å–ª–æ–≤–∏—è–º–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
                        </FormLabel>
                        <FormMessage />
                      </div>
                    </FormItem>} />
                
                <Button type="submit" className="btn-primary w-full">
                  <Check size={18} className="mr-2" /> –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É
                </Button>
              </form>
            </Form>
          </div>
        </div>
      </div>
    </section>;
};
export default ContactForm;
